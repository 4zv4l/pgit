#!/usr/bin/env perl

use FindBin '$Bin';
use lib "$Bin/../lib";
use PGit::Object;
use PGit::Common qw($PGIT_DIR $INDEX_PATH get_head update_head get_current_commit);
use Digest::SHA 'sha1_hex';
use POSIX 'strftime';
use strict;
use warnings;

die "Not a PGit Project\n" unless -d $PGIT_DIR;
my $COMMIT_MESSAGE_TEMPLATE = $ARGV[0] ? $ARGV[0] : "# Title\n#\n# Body";

open my $index_file, '<', $INDEX_PATH or die "$INDEX_PATH: $!\n";
my @index_files = <$index_file>;
close $index_file;
die "No file to commit\n" if @index_files == 0;

my %index_tree = (); # tree of path with file => sha1
for my $entry (@index_files) {
  my ($sha, $path) = split ' ', $entry;
  my @paths        = File::Spec->splitdir($path);
  my $href         = \%index_tree;
  for my $path (@paths[0..$#paths-1]) {
    $href->{$path} = {} unless exists $href->{$path};
    $href = $href->{$path};
  }
  $href->{$paths[$#paths]} = $sha;
}

sub build_tree {
  my ($name, %tree) = @_;
  my $sha           = sha1_hex(strftime("%FT%TZ", gmtime) . $name);
  my $obj           = PGit::Object->new($sha);
  my $tree_str      = "";

  for my $key (keys %tree) {
    if (ref($tree{$key}) eq "HASH") {
      my $dir_sha = build_tree($key, %{$tree{$key}});
      $tree_str .= "tree $dir_sha $key\n";
    } else {
      $tree_str .= "blob $tree{$key} $key\n";
    }
  }
  $obj->write($tree_str);
  
  $sha;
}

sub build_commit {
  my ($tree) = @_;
  my $commit_message_path = "$PGIT_DIR/COMMIT_EDITMSG";
  `echo "$COMMIT_MESSAGE_TEMPLATE" > $commit_message_path`;
  `\$EDITOR $commit_message_path >/dev/tty`; # redirect for editor to work
  open my $commit_message_file, '<', $commit_message_path or die "$commit_message_path: $!\n";
  my $message  = join '', <$commit_message_file>;
  my $commiter = "user";
  my $parent   = get_current_commit; # check if exists if yes take sha1hex
  my $sha      = sha1_hex(strftime("%FT%TZ", gmtime) . $commiter);
  my $obj      = PGit::Object->new($sha);
  my $commit_str = "tree $tree\n";
  $commit_str   .= "parent $parent\n" if $parent;
  $commit_str   .= "author $commiter @{[time, strftime '%z', gmtime]}\n";
  $commit_str   .= "\n$message\n";
  $obj->write($commit_str);

  $sha;
}

my $root_sha   = build_tree("root", %index_tree);
my $commit_sha = build_commit($root_sha);
update_ref($commit_sha);
truncate "$INDEX_PATH", 0;
